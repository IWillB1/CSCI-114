#BlueJ class context
comment0.target=Person
comment0.text=\n\ <h2>Person.java\ -\ represents\ a\ Person</h2>\n\n\ <h3>Instance\ variable\:</h3>\n\n\ <ul>\n\ \ \ \ \ <li><b>String</b>\ name\ -\ Name\ of\ the\ person\n\ </ul>\n\n\ @author\ Will\ Bouasisavath\n\ @version\ Homework\ 11,\ Project\ 2\n
comment1.params=name
comment1.target=Person(java.lang.String)
comment1.text=\n\ Constructor\n\ @param\ name\ (<b>String</b>)\ sets\ <code>this.name</code>\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\n\ Getter\ for\ <code>name</code>\n\ @return\ <code>name</code>\n
comment3.params=name
comment3.target=void\ setName(java.lang.String)
comment3.text=\n\ Setter\ for\ <code>name</code>\n\ @param\ name\ (<b>String</b>)\ sets\ <code>this.name</code>\n
comment4.params=
comment4.target=java.lang.String\ toString()
comment4.text=\n\ Creates\ a\ <b>String</b>\ with\ useful\ values\n\ @return\ a\ <b>String</b>\ with\ useful\ values\ like\ <code>name</code>\n
comment5.params=other
comment5.target=boolean\ equals(java.lang.Object)
comment5.text=\n\ Classic\ equals\ method,\ comparing\ <code>Person</code>\ and\ another\ object\n\ @param\ other\ (<b>Object</b>)\ -\ is\ cast\ into\ a\ <code>Person</code>\ so\ it\ can\ be\ compared\n\ @return\ (<b>Boolean</b>)\ -\ <b>true</b>\ if\ they\ are\ the\ same\ (aka\ equal),\ else\ <b>false</b>\n
numComments=6
