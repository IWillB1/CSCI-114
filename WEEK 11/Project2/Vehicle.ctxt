#BlueJ class context
comment0.target=Vehicle
comment0.text=\n\ <h2>Vehicle.java\ -\ represents\ a\ Vehicle</h2>\n\n\ <h3>Instance\ variables\:</h3>\n\n\ <ul>\n\ \ \ \ \ <li><b>String</b>\ manufacturerName\ -\ Name\ of\ the\ manufacturer\n\ \ \ \ \ <li><b>String</b>\ Owner\ -\ Who\ is\ the\ owner\n\ \ \ \ \ <li><b>int</b>\ engineCylinders\ -\ How\ many\ cylinders\ it\ has\n\ </ul>\n\n\ @author\ Will\ Bouasisavath\n\ @version\ Homework\ 11,\ Project\ 2\n
comment1.params=manufacturerName\ engineCylinders\ person
comment1.target=Vehicle(java.lang.String,\ int,\ Person)
comment1.text=\n\ Constructor\ sets\ and\ instantiates\ the\ three\ instance\ variables\n\ @param\ manufacturerName\ (<b>String</b>)\ -\ The\ name\ of\ the\ manufacturer\n\ @param\ engineCylinders\ (<b>int</b>)\ -\ How\ many\ engine\ cylinders\ it\ has\n\ @param\ person\ (<b>Person</b>)\ -\ Which\ person\ (<code>Person.getName()</code>)\ object\ owns\ this\ vehicle\n
comment2.params=
comment2.target=java.lang.String\ getManufacturerName()
comment2.text=\n\ Getter\ for\ <code>manufacturerName</code>\n\ @return\ <code>manufacturerName</code>\n
comment3.params=manufacturerName
comment3.target=void\ setManufacturerName(java.lang.String)
comment3.text=\n\ Getter\ for\ setManufacturerName\n\ @param\ manufacturerName\ -\ Sets\ <code>this.manufacturerName</code>\n
comment4.params=
comment4.target=int\ getEngineCylinders()
comment4.text=\n\ Getter\ for\ <code>engineCylinders</code>\n\ @return\ <code>engineCylinders</code>\n
comment5.params=engineCylinders
comment5.target=void\ setEngineCylinders(int)
comment5.text=\n\ Setter\ for\ <code>engineCylinders</code>\n\ @param\ engineCylinders\ -\ Sets\ <code>this.engineCylinders</code>\n
comment6.params=
comment6.target=java.lang.String\ getOwnerName()
comment6.text=\n\ Getter\ for\ <code>ownerName</code>\n\ @return\ <code>ownerName</code>\n
comment7.params=ownerName
comment7.target=void\ setOwnerName(java.lang.String)
comment7.text=\n\ Setter\ for\ <code>ownerName</code>\n\ @param\ ownerName\ -\ Sets\ <code>this.ownerName</code>\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ Creates\ and\ returns\ a\ string\ with\ useful\ values\n\ @return\ (<b>String</b>)\ of\ useful\ values\n
comment9.params=anObject
comment9.target=boolean\ equals(java.lang.Object)
comment9.text=\n\ Equals\ method\ tests\ two\ objects\ and\ determines\ if\ they\ are\ the\ same\ (aka\ equal)\n\ @param\ anObject\ is\ an\ <b>Object</b>\ which\ is\ cast\ into\ a\ <code>Vehicle</code>\ so\ it\ can\ be\ compared\n\ @return\ (<b>Boolean</b>)\ which\ is\ <b>true</b>\ if\ the\ objects\ are\ the\ same,\ else\ return\ <b>false</b>\n
numComments=10
