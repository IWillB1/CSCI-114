#BlueJ class context
comment0.target=Figure
comment0.text=\n\ <h2>Figure.java\ -\ Parent\ class\ named\ figure</h2>\n\ \n<h3>Problem\ Statement\:</h3>\n\ <p>Create\ an\ \ <b><i>abstract</i></b>\ \ class\ called\ <code><b>Figure</b></code>,\ \ which\ is\ the\ ancestor\ of\ several\ concrete\ classes</p>\n\ \n\ <p>Algorithm\:</p>\n\ <p>In\ main\:</p>\n\ <ol>\n\ \ \ \ \ <li>\ Create\ two\ instance\ variables,\ both\ <b>private\ double</b>,\ named\ <b>area</b>\ and\ <b>perimeter</b>\n\ \ \ \ \ <li>\ a\ single\ constructor\ which\ takes\ no\ arguments\ and\ sets\ both\ instance\ variables\ to\ zero\n\ \ \ \ \ <li>\ getter\ (accessor)\ and\ setter\ (mutator)\ methods\ for\ the\ two\ instance\ variables\n\ \ \ \ \ <li>\ abstract\ methods\ with\ headings\ <b>public\ String\ toString()</b>\ \ and\ <b>public\ boolean\ equals(Object)</b>\n\ \ \ \ \ <li>\ abstract\ methods\ with\ headings\ <b>public\ void\ calculatePerimiter()</b>\ and\ <b>public\ void\ calculateArea()</b>\n\ \ \ \ \ <li>\ a\ method\ with\ signature\ public\ int\ <b>getNumberOfSides()</b>,\ \ which\ will\ return\ the\ number\ of\ sides\ for\ a\ specific\ shape\n\ </ol>\n\ \n\ @author\ Will\ Bouasisavath\n\ @version\ Module\ 15,\ Lab\ 1\n
comment1.params=
comment1.target=Figure()
comment1.text=\n\ Constructor\ for\ Figures\n
comment10.params=
comment10.target=int\ getNumberOfSides()
comment10.text=\n\ A\ method\ with\ signature\ public\ int\ which\ will\ return\ the\ number\ of\ sides\ for\ a\ specific\ shape\n\ Getter\ for\ <code>NumberOfSides</code>\n\ @return\ <code>NumberOfSides</code>\n
comment2.params=area
comment2.target=void\ setarea(double)
comment2.text=\n\ Setter\ for\ <code>area</code>\n\ @param\ area\ -\ sets\ <this.area</code>\n
comment3.params=perimeter
comment3.target=void\ setperimeter(double)
comment3.text=\n\ Setter\ for\ <code>perimeter</code>\n\ @param\ perimeter\ -\ sets\ <code>this.perimeter</code>\n
comment4.params=
comment4.target=double\ getarea()
comment4.text=\n\ Getter\ for\ <code>area</code>\n\ @return\ <code>area</code>\n
comment5.params=
comment5.target=double\ getperimeter()
comment5.text=\n\ Getter\ for\ <code>perimeter</code>\n\ @return\ <code>perimeter</code>\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment7.params=obj
comment7.target=boolean\ equals(java.lang.Object)
comment8.params=
comment8.target=void\ calculateArea()
comment9.params=
comment9.target=void\ calculatePerimeter()
numComments=11
