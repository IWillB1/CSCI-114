#BlueJ class context
comment0.target=RobotStats
comment0.text=\n\ <h2>RobotStats.java\ -\ Child\ of\ Robot\ class</h2>\n\n\ <p>Instance\ variables\:</p>\n\n\ <ul>\n\ \ \ \ \ <li><b>int</b>\ climbs\ -\ Total\ number\ of\ successful\ climbs\n\ \ \ \ \ <li><b>int</b>\ ballsScore\ -\ Ball\ score\ of\ the\ robot\n\ \ \ \ \ <li><b>int</b>\ autoScore\ -\ Average\ match\ auto\ score\ for\ the\ robot\n\ \ \ \ \ <li><b>int</b>\ rank\ -\ Rank\ of\ the\ robot\ at\ the\ LAN\ comp\n\ </ul>\n\n\ @author\ Will\ Bouasisavath\n\ @version\ Final\ Project\n
comment1.params=team\ functional\ tall\ groundIntake\ shootHigh\ climb\ translate\ climbs\ ballsScore\ autoScore\ rank
comment1.target=RobotStats(int,\ boolean,\ boolean,\ boolean,\ boolean,\ boolean,\ boolean,\ int,\ int,\ int,\ int)
comment1.text=\n\ Constructor\n\ @param\ team\ -\ Set\ into\ the\ <b>super</b>\ constructor\n\ @param\ functional\ -\ Set\ into\ the\ <b>super</b>\ constructor\n\ @param\ tall\ -\ Set\ into\ the\ <b>super</b>\ constructor\n\ @param\ groundIntake\ -\ Set\ into\ the\ <b>super</b>\ constructor\n\ @param\ shootHigh\ -\ Set\ into\ the\ <b>super</b>\ constructor\n\ @param\ climb\ -\ Set\ into\ the\ <b>super</b>\ constructor\n\ @param\ translate\ -\ Set\ into\ the\ <b>super</b>\ constructor\n\ @param\ climbs\ -\ Sets\ <code>this.climbs</code>\n\ @param\ ballsScore\ -\ Sets\ <code>this.ballsScore</code>\n\ @param\ autoScore\ -\ Sets\ <code>this.autoScore</code>\n\ @param\ rank\ -\ Sets\ <code>this.rank</code>\n
comment10.params=o
comment10.target=boolean\ equals(java.lang.Object)
comment10.text=\n\ Tests\ if\ two\ objects\ are\ equal\n\ @param\ o\ -\ <code>Object</code>\ that\ will\ be\ compared\n\ @return\ true,\ if\ they\ are\ equal\ in\ every\ way,\ otherwise\ return\ false\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\n\ Example\ of\ polymorphism\ and\ inheritance,\ as\ it\ uses\ a\ super\ (parent)\ toString\ and\ generates\ a\ unique\ one\ that\ overrides\ when\ called\ on\ this\ object.\n\ @return\ A\ <b>String</b>\ with\ instance\ variables,\ also\ using\ <code>super.toString</code>\n
comment2.params=
comment2.target=int\ getClimbs()
comment2.text=\n\ Getter\ for\ <code>climbs</code>\n\ @return\ <code>climbs</code>\n
comment3.params=climbs
comment3.target=void\ setClimbs(int)
comment3.text=\n\ Setter\ for\ <code>climbs</code>\n\ @param\ climbs\ -\ sets\ <code>this.climbs</code>\n
comment4.params=
comment4.target=int\ getBallsScore()
comment4.text=\n\ Getter\ for\ <code>ballsScore</code>\n\ @return\ <code>ballsScore</code>\n
comment5.params=ballsScore
comment5.target=void\ setBallsScore(int)
comment5.text=\n\ Setter\ for\ <code>ballsScore</code>\n\ @param\ ballsScore\ -\ Sets\ <code>this.ballsScore</code>\n
comment6.params=
comment6.target=int\ getAutoScore()
comment6.text=\n\ Getter\ for\ <code>autoScore</code>\n\ @return\ <code>autoScore</code>\n
comment7.params=autoScore
comment7.target=void\ setAutoScore(int)
comment7.text=\n\ Setter\ for\ <code>autoScore</code>\n\ @param\ autoScore\ -\ Sets\ <code>this.autoScore</code>\n
comment8.params=
comment8.target=int\ getRank()
comment8.text=\n\ Getter\ for\ <code>rank</code>\n\ @return\ <code>rank</code>\n
comment9.params=rank
comment9.target=void\ setRank(int)
comment9.text=\n\ Setter\ for\ <code>rank</code>\n\ @param\ rank\ -\ Sets\ <code>this.rank</code>\n
numComments=12
